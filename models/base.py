from __future__ import annotations

from uuid import UUID, uuid4
from pydantic import BaseModel, Field
from dataclasses import make_dataclass, field


Item = make_dataclass(
    "Item",
    [
        ("id", UUID, field(default_factory=uuid4)),
        ("parent_id", UUID, None),
        ("book_id", UUID, None),
        ("type", str, None),
        ("metadata", dict, field(default_factory=dict)),
    ]
)


class BookItem(BaseModel):
    """
    A chapter item object.

    Args:
        id (UUID): The ID of the chapter item. Defaults to an autogenerated UUID.
        parent_id (UUID): The ID of the parent chapter.
        book_id (UUID): The ID of the book.
        chapter_id (UUID): The ID of the chapter.
        page (int): The page number of the chapter.
    """
    page: int

    class Config:
        arbitrary_types_allowed = True


class TitleChildrenItem(BookItem):
    """
    A title children item object.

    Args:
        page (int): The page number of the chapter.
        title (str): The title of the item.
        children (list[UUID]): The list of children IDs. Defaults to [].
    """
    page: int
    title: str
    children: list[UUID] = Field(default_factory=list)


class TitleChildrenCostItem(TitleChildrenItem):
    """
    A title children cost item object.

    Args:
        id (UUID): The ID of the chapter item. Defaults to an autogenerated UUID.
        parent_id (UUID): The ID of the parent chapter.
        book_id (UUID): The ID of the book.
        chapter_id (UUID): The ID of the chapter.
        page (int): The page number of the chapter.
        title (str): The title of the item.
        cost (str | dict[str, str] | list[str]): The cost of the item.
        children (list[UUID]): The list of children IDs.
    """
    cost: str | dict[str, str] | list[str]


class TitleChildrenTypesItem(TitleChildrenItem):
    """
    A title children types item object.

    Args:
        id (UUID): The ID of the chapter item. Defaults to an autogenerated UUID.
        parent_id (UUID): The ID of the parent chapter.
        book_id (UUID): The ID of the book.
        chapter_id (UUID): The ID of the chapter.
        page (int): The page number of the chapter.
        title (str): The title of the item.
        types (list[str]): The list of types.
    """
    types: list[str]


class TitleChildrenCostTypesItem(TitleChildrenItem):
    """
    A title children cost types item object.

    Args:
        id (UUID): The ID of the chapter item. Defaults to an autogenerated UUID.
        parent_id (UUID): The ID of the parent chapter.
        book_id (UUID): The ID of the book.
        chapter_id (UUID): The ID of the chapter.
        page (int): The page number of the chapter.
        title (str): The title of the item.
        cost (str | dict[str, str] | list[str]): The cost of the item.
        types (list[str]): The list of types.
    """
    cost: str | dict[str, str] | list[str]
    types: list[str]
